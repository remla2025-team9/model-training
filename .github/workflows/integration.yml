# This GitHub Actions workflow is designed to run integration tests regarding DVC pipelines and code quality checks.
name: Integration CI

# This workflow is triggered on pull requests to the main branch, excluding certain paths.
on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '.github/**'
      - 'README.md'
      - 'docs/**'
      - '*.md'

jobs:
  ci-pipeline-smoke-test:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository code for the workflow
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python environment with specified version
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Install project dependencies from requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Run pylint for code quality analysis
      - name: Run pylint
        run: pylint --rcfile=linting/.pylintrc src/  

      # Run flake8 for style guide enforcement
      - name: Run flake8
        run: flake8 --config=linting/.flake8 src/ 

      # Run bandit for security vulnerability scanning
      - name: Run bandit
        run: bandit -r src/ -c linting/bandit.yaml

      # Pull data files managed by DVC from remote storage
      - name: DVC pull
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          echo "Pulling DVC data..."
          dvc pull
          echo "DVC pull completed."
      
      # Rebuild preprocessor (featurize) to ensure data is ready for training
      - name: Rebuild preprocessor (featurize)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          echo "Rebuilding preprocessor..."
          dvc repro featurize
          echo "Featurize completed."

      # Run DVC pipeline to prepare, train, and evaluate the model    
      - name: Run DVC pipeline
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          echo "Running DVC pipeline..."
          dvc repro prepare train evaluate
          echo "DVC pipeline completed."
