# Workflow to bump version and create pre-release tags for model delivery
name: Delivery

# This workflow is triggered on pushes to the main branch.
on:
  push:
    branches: [main]

permissions:
  contents: write

# This workflow requires AWS credentials to access DVC remote storage.
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  build-and-prerelease:
    runs-on: ubuntu-latest

    steps:
    # Check out repository with complete history to enable versioning
    - name: Checkout full history
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Set up Python environment with specified version
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    # Install project dependencies from requirements.txt
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Pull data files managed by DVC from remote storage
    - name: DVC pull
      run: |
        echo "Pulling DVC data..."
        dvc pull
        echo "DVC pull completed."
    
    # Execute DVC pipeline and push results back to remote storage
    - name: Run DVC pipeline
      run: |
        echo "Running DVC pipeline..."
        dvc repro
        echo "DVC pipeline completed."
        dvc push

        echo "MODEL_FILE_PATH=models/model.joblib" >> $GITHUB_ENV
        echo "VECTORIZER_FILE_PATH=vectorizers/vectorizer.joblib" >> $GITHUB_ENV

    # Upload trained model as GitHub Actions artifact
    - name: Upload Model Artifact
      uses: actions/upload-artifact@v4
      with:
        name: model-${{ steps.tag_version.outputs.new_tag }}
        path: ${{ env.MODEL_FILE_PATH }}

        # Upload trained model as GitHub Actions artifact
    - name: Upload Model Artifact
      uses: actions/upload-artifact@v4
      with:
        name: vectorizer-${{ steps.tag_version.outputs.new_tag }}
        path: ${{ env.MODEL_FILE_PATH }}

    # Upload model evaluation metrics as GitHub Actions artifact
    - name: Upload Metrics Artifact
      uses: actions/upload-artifact@v4
      with:
        name: evaluation-metrics-${{ steps.tag_version.outputs.new_tag }}
        path: reports/evaluation_metrics.json

    # Create a new pre-release tag using semantic versioning
    - name: Create new pre-release tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        release_branches: '_NONE_'
        pre_release_branches: main
        default_prerelease_bump: prerelease
        append_to_pre_release_tag: pre # Example: v1.0.0-patch.pre 
        tag_prefix: v

    # Create a GitHub pre-release with the new model and evaluation metrics
    - name: Create GitHub Pre-Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.tag_version.outputs.new_tag }}
        name: "Pre-release ${{ steps.tag_version.outputs.new_tag }}"
        files: |
          ${{ env.MODEL_FILE_PATH }}
          ${{ env.VECTORIZER_FILE_PATH }}
          reports/evaluation_metrics.json
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}