name: Delivery

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  build-and-prerelease:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout full history
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Create new pre-release tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        release_branches: '_NONE_'
        pre_release_branches: main
        default_prerelease_bump: prerelease
        append_to_pre_release_tag: pre # Example: v1.0.0-patch.pre 
        tag_prefix: v

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: DVC pull
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        echo "Pulling DVC data..."
        dvc pull
        echo "DVC pull completed."
    
    - name: Run DVC pipeline
      run: |
        echo "Running DVC pipeline..."
        dvc repro
        echo "DVC pipeline completed."
        dvc push

        echo "MODEL_FILE_PATH=models/model.joblib" >> $GITHUB_ENV

    - name: Upload Model Artifact
      uses: actions/upload-artifact@v4
      with:
        name: sentiment-classifier-${{ steps.tag_version.outputs.new_tag }}
        path: ${{ env.MODEL_FILE_PATH }}

    - name: Upload Metrics Artifact
      uses: actions/upload-artifact@v4
      with:
        name: evaluation-metrics-${{ steps.tag_version.outputs.new_tag }}
        path: reports/evaluation_metrics.json

    - name: Create GitHub Pre-Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.tag_version.outputs.new_tag }}
        name: "Pre-release ${{ steps.tag_version.outputs.new_tag }}"
        files: |
          ${{ env.MODEL_FILE_PATH }}
          reports/evaluation_metrics.json
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}